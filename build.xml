<?xml version="1.0" ?>
<project default="all" basedir=".">

	<echo message="Building JstatUI App" />

	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="extlib" location="WebContent/WEB-INF/lib" />
	<property name="web.dir" value="WebContent" />

	<property file="build.properties" />

	<target name="dist" depends="compile,do-versioning-for-jss" description="Building JstatUI war">

		<war destfile="${dist}/JstatUI.war" webxml="WebContent/WEB-INF/web.xml">
			<lib dir="${extlib}">
				<include name="*.jar" />
				<exclude name="xerces-2.6.2.jar" />
				<exclude name="servlet-api-2.5-20081211.jar" />
			</lib>
			<fileset dir="WebContent/">
				<include name="**/*.tld" />
				<include name="**/*.css" />
				<include name="**/*.xml" />
				<include name="**/*.html" />
				<include name="**/*.js" />
				<include name="**/*.jsp" />
				<include name="**/*.gif" />
				<include name="**/*.png" />
				<include name="**/*.properties" />
				<exclude name="**/_svn/**" />
			</fileset>
			<classes dir="${build}" />
		</war>
		<antcall target="undo-versioning-for-jss">
		</antcall>
	</target>

	<target name="compile" description="Compile the source code ">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<javac srcdir="${src}" destdir="${build}" debug="true" debuglevel="lines,vars,source">
			<classpath>
				<!--   Thirdparty Jars -->
				<fileset dir="${extlib}">
					<include name="*.jar" />
				</fileset>
				<!--<fileset dir="${tomcatlib}">
					<include name="servlet-api.jar"/>
					<include name="jstl.jar"/>
					<include name="jsp-api.jar"/>
				</fileset>-->
				<!-- JUnit jars -->
			</classpath>
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		<copy todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.properties" />
				<include name="*.xml" />
			</fileset>
		</copy>
		<jar destfile="${dist}/JstatUI.jar">
			<zipfileset dir="${build}" includes="**/*.*" />
		</jar>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<!-- Build a Jar out of CoreServies classes  -->
	<target name="all" depends="clean,compile,dist" description="Complete Build">
		<delete dir="${build}" />
	</target>

	<target name="deploy" depends="all" description="Group the deployable components">
		<mkdir dir="${deploy.dir}/war" />
		<copy todir="${deploy.dir}/war">
			<fileset dir="${dist}">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<target name="copyjars" description="This target copies all the dependant jar files into the WEB-INF\lib folder">
		<copy todir="web/WEB-INF/lib">
			<fileset dir="${deplib.cs}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${deplib.dal}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${deplib.ss}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${deplib.ad}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="do-versioning-for-jss" if="do.versioning">
		<replaceregexp match='(\.js)([^"&apos;p ]*)(("){1}|(&apos;){1})' replace='.js?version=${js.version}\3' flags="g">
			<fileset dir="${web.dir}" includes="**/*.jsp" />
		</replaceregexp>
	</target>

	<target name="undo-versioning-for-jss" if="do.versioning">
		<replaceregexp match='(\.js)([^"&apos;p ]*)(("){1}|(&apos;){1})' replace='.js\3' flags="g">
			<fileset dir="${web.dir}" includes="**/*.jsp" />
		</replaceregexp>
	</target>

</project>
